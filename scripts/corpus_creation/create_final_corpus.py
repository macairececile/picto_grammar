"""
Script to clean the data generated by the grammar, i.e. remove the lines where there is no translation in pictograms.

Example of use: python create_final_corpus.py --data 'corpus_grammar.csv' --save 'corpus_grammar/'
"""

import pandas as pd
from argparse import ArgumentParser, RawTextHelpFormatter


def read_tsv(csv_file):
    """
        Read csv file in a dataframe

        Arguments
        ---------
        csv_file: .csv file

        Returns
        -------
        A dataframe with the data.
    """
    return pd.read_csv(csv_file, sep='\t')


def calculate_loss_percentage_grammar(data):
    """
        Calculate the percentage of sentences that do not have any associated pictogram translation.

        Arguments
        ---------
        data: dataframe
    """
    tokens = data["tokens"].values.tolist()
    print("#total sentences: ", len(tokens))
    f = [a for a in tokens if a != a]
    print("#sentences with a translation in pictogram: ", len(tokens) - len(f))
    loss_percentage = 1 - ((len(tokens) - len(f)) / len(tokens))
    print("loss percentage: ", loss_percentage)


def create_csv_with_sentences_with_translation_grammar(save_folder, csv_file_name, data):
    """
        Remove sentences with empty translation and save it in a file.

        Arguments
        ---------
        save_folder: str
        csv_file_name: str
        data: dataframe
    """
    df = data.dropna()
    df.to_csv(save_folder + csv_file_name, index=False, header=True, sep='\t')


def create_final_corpus(args):
    data = read_tsv(args.data)
    calculate_loss_percentage_grammar(data)
    name_file = args.data.split('.csv')[0].split('/')[-1] + '_pictos.csv'
    create_csv_with_sentences_with_translation_grammar(args.save, name_file, data)


parser = ArgumentParser(description="Clean the data from grammar and save them.",
                        formatter_class=RawTextHelpFormatter)
parser.add_argument('--data', type=str, required=True,
                    help="")
parser.add_argument('--save', type=str, required=True,
                    help="")
parser.set_defaults(func=create_final_corpus)
args = parser.parse_args()
args.func(args)
